User visible features:
----------------------

  * change user and drop privileges. Perhaps use also capabilities.

  * identify nodes from protocol window. It could be done by maintaining a
    node tree for every global protocol.

  * show all node stats in node window

  * revise preferences dialog; allow filtering out netbios names

  * Ability to set per node preferences. Like setting an hour long
    averaging time only for the router.

  * Ability to manually place nodes. It's dependent on the above.
    Once is done you will be able to open and save your own 
    diagrams.

Issues in the source code
-------------------------

  * unify node_id and packet decoding. Right now ip/tcp nodes can get useless
    ids, leading to incorrect node splitting for multiproto networks.
    Node id should be attributed only after packet decoding, by choosing a
    suitable numeric name.
    This problem can happen only when default packet filters are disabled, 
    though, something the user can do only on purpose :-)

  * rewrite names handling. Do only packet extraction at capture time, name
    resolution only at display time for the chosen name.

  * Generalize a way to return error messages from capture.c
  
  * use glib datastructs everywhere, instead of a mix of glib and in-house.

  * refactor stop handling; separate clearing data from updating. 

  * Why am I using a global "interface" and a second "device"
    in capture.c? Check that I can just use interface.

  * Use a GArray instead of a fixed array for the protocols
    stack.

--
$Id$
