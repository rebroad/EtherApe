User visible features:
----------------------

  * Extend the protocols known further than just IP.
  
  * Make protocol colors user-selectable.
  
  * Ability to set per node preferences. Like setting an hour long
    averaging time only for the router.
    
  * Ability to manually place nodes. It's dependent on the above.
    Once is done you will be able to open and save your own 
    diagrams.

Issues in the source code
-------------------------

  * gui_start_capture and gui_pause_capture should return an
    error code that should be handled (as with gui_stop_capture)
 
  * Generalize a way to return error messages from capture.c
  
  * Stablish criteria for the meaning of a function's gboolean 
    return value. Does it mean it was correct or there was an
    error? There are examples of opposite cases.
  
  * Why am I using a global "interface" and a second "device"
    in capture.c? Check that I can just use interface.

  * Use a GArray instead of a fixed array for the protocols
    stack.

  * change all those ugly while (i+1) in capture.c

  * Find out a way to customize the gnome message that pops up
    if a SIGSEGV crashes us.
    
  * Clean up the resolver functions. Right now I'm using two 
    different files from two different packages (resolv.c from 
    ethereal and dns.c from mtr)

  * belongs_to should be a packet property, and not have to be
    passed from the functions.
  
  * Add incoming and outcoming traffic into a single canvas_link,
    and not put them one underneath the other. Funny no one has
    noticed. :-)

  * Only now I realize that I could just use a regular
    GtkTooltips for the canvas tooltips and not create my own.

  * Define GLADEDIR in config.h the same way that PIXMAPS_DIR is, and not
    just pass it to the compiler

--
$Id$
