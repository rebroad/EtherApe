#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT(etherape, 0.9.0)
AC_CONFIG_SRCDIR(README)
AC_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

# gnome checks
GNOME_COMPILE_WARNINGS

# Checks for libraries.
PKG_CHECK_MODULES(ETHERAPE, libglade-2.0 libgnomeui-2.0)
AC_SUBST(ETHERAPE_CFLAGS)
AC_SUBST(ETHERAPE_LIBS)

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h netdb.h netinet/in.h stdlib.h string.h sys/ioctl.h sys/socket.h sys/time.h unistd.h net/if.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_MODE_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_C_VOLATILE
AC_CHECK_TYPES(u_int, ,AC_DEFINE(u_int, unsigned int, [define u_int]))
AC_CHECK_TYPES(u_short, ,AC_DEFINE(u_short, unsigned short, [define u_short]))
AC_CHECK_TYPES(u_long, ,AC_DEFINE(u_long, unsigned long, [define u_long]))
AC_CHECK_TYPES(u_char, ,AC_DEFINE(u_char, unsigned char, [define u_char]))

# Copied from mtr to support dns.c
# After some kind of change in libc, it seems it is
# required to #include <resolv.h> for the test to succeed.
# To go around it I included the test for __res_init

AC_CHECK_FUNC(res_init, , 
  AC_CHECK_LIB(bind, res_init, , 
   AC_CHECK_LIB(resolv, res_init, ,
    AC_CHECK_LIB(c, __res_init, , AC_MSG_ERROR(No resolver library found)))))

AC_CHECK_FUNC(res_mkquery, , 
  AC_CHECK_LIB(bind, res_mkquery, , 
   AC_CHECK_LIB(resolv, res_mkquery, , AC_MSG_ERROR(No resolver library found))))

# Check for the pcap library.
AC_ARG_ENABLE(static-pcap,
  [  --enable-static-pcap    Used to build the rpm within Debian. ],
  STATIC_PCAP=yes)
AC_ETHEREAL_PCAP_CHECK

# Checks for library functions.
#AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_CHECK_FUNCS([alarm floor gethostbyaddr gethostbyname gettimeofday inet_ntoa localtime_r memset pow putenv socket sqrt strcasecmp strchr strerror strpbrk strstr])

# Create DATAFILE_DIR #define for config.h
DATAFILE_DIR=$sysconfdir
# The following statement was in ethereal
# but it breaks in some machines and I still don't know
# what is for... JTC :-)
#DATAFILE_DIR=(
#    test "x$prefix" = xNONE && prefix=$ac_default_prefix
#    test "x$exec_prefix" = xNONE && exec_prefix=${prefix}
#    eval echo "$DATAFILE_DIR"
#    )
AC_DEFINE_UNQUOTED(DATAFILE_DIR,"$DATAFILE_DIR")
AC_SUBST(DATAFILE_DIR)


dnl Add the languages which your application supports here.
ALL_LINGUAS="es fr nl tr"
AM_GLIB_GNU_GETTEXT
GETTEXT_PACKAGE=etherape
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE")

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
fi

dnl Set PIXMAPS_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${ac_default_prefix}/${DATADIRNAME}/pixmaps")
else
  AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${prefix}/${DATADIRNAME}/pixmaps")
fi





AC_CONFIG_FILES([Makefile
                 etherape.spec
                 glade/Makefile
                 src/Makefile
		 m4/Makefile
        	 doc/Makefile
 		 doc/C/Makefile
		 po/Makefile.in])


AC_OUTPUT
